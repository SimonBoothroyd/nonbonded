"""Intial generation

Revision ID: 570fdd474d67
Revises:
Create Date: 2020-09-08 13:56:43.491506

"""
import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision = "570fdd474d67"
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "authors",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("email", sa.String(), nullable=False),
        sa.Column("institute", sa.String(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("email"),
    )
    op.create_index(op.f("ix_authors_id"), "authors", ["id"], unique=False)
    op.create_table(
        "base_sets",
        sa.Column("id", sa.String(length=32), nullable=False),
        sa.Column("type", sa.String(length=12), nullable=True),
        sa.Column("description", sa.String(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_base_sets_id"), "base_sets", ["id"], unique=False)
    op.create_table(
        "chemical_environments",
        sa.Column("id", sa.String(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_chemical_environments_id"),
        "chemical_environments",
        ["id"],
        unique=True,
    )
    op.create_table(
        "data_set_results",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_data_set_results_id"), "data_set_results", ["id"], unique=False
    )
    op.create_table(
        "force_fields",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("inner_content", sa.String(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_force_fields_id"), "force_fields", ["id"], unique=False)
    op.create_table(
        "molecule_set_results",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_molecule_set_results_id"), "molecule_set_results", ["id"], unique=False
    )
    op.create_table(
        "parameters",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("handler_type", sa.String(), nullable=False),
        sa.Column("smirks", sa.String(), nullable=False),
        sa.Column("attribute_name", sa.String(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_parameters_id"), "parameters", ["id"], unique=False)
    op.create_table(
        "projects",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("identifier", sa.String(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("description", sa.String(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("name"),
    )
    op.create_index(op.f("ix_projects_id"), "projects", ["id"], unique=False)
    op.create_index(
        op.f("ix_projects_identifier"), "projects", ["identifier"], unique=True
    )
    op.create_table(
        "recharge_conformer_settings",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("method", sa.String(length=16), nullable=False),
        sa.Column("sampling_mode", sa.String(length=8), nullable=False),
        sa.Column("max_conformers", sa.Integer(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("method", "sampling_mode", "max_conformers"),
    )
    op.create_index(
        op.f("ix_recharge_conformer_settings_id"),
        "recharge_conformer_settings",
        ["id"],
        unique=False,
    )
    op.create_table(
        "recharge_esp_settings",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("basis", sa.String(), nullable=False),
        sa.Column("method", sa.String(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("basis", "method"),
    )
    op.create_index(
        op.f("ix_recharge_esp_settings_id"),
        "recharge_esp_settings",
        ["id"],
        unique=False,
    )
    op.create_table(
        "statistics",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("type", sa.String(length=12), nullable=True),
        sa.Column("statistic_type", sa.String(), nullable=True),
        sa.Column("value", sa.Float(), nullable=True),
        sa.Column("lower_95_ci", sa.Float(), nullable=True),
        sa.Column("upper_95_ci", sa.Float(), nullable=True),
        sa.Column("category", sa.String(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_statistics_id"), "statistics", ["id"], unique=False)
    op.create_table(
        "sub_studies",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("type", sa.String(length=12), nullable=True),
        sa.Column("identifier", sa.String(length=32), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("description", sa.String(), nullable=False),
        sa.Column("optimization_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["optimization_id"],
            ["sub_studies.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_sub_studies_id"), "sub_studies", ["id"], unique=False)
    op.create_index(
        op.f("ix_sub_studies_identifier"), "sub_studies", ["identifier"], unique=False
    )
    op.create_table(
        "author_base_sets",
        sa.Column("base_set_id", sa.String(length=32), nullable=True),
        sa.Column("author_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["author_id"],
            ["authors.id"],
        ),
        sa.ForeignKeyConstraint(
            ["base_set_id"],
            ["base_sets.id"],
        ),
    )
    op.create_table(
        "author_projects",
        sa.Column("project_id", sa.Integer(), nullable=False),
        sa.Column("author_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["author_id"],
            ["authors.id"],
        ),
        sa.ForeignKeyConstraint(
            ["project_id"],
            ["projects.id"],
        ),
        sa.PrimaryKeyConstraint("project_id", "author_id"),
    )
    op.create_table(
        "data_set_statistics",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("parent_id", sa.Integer(), nullable=False),
        sa.Column("property_type", sa.String(), nullable=True),
        sa.Column("n_components", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["id"],
            ["statistics.id"],
        ),
        sa.ForeignKeyConstraint(
            ["parent_id"],
            ["data_set_results.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "data_sets",
        sa.Column("id", sa.String(length=32), nullable=False),
        sa.ForeignKeyConstraint(
            ["id"],
            ["base_sets.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "molecule_set_statistics",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("parent_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["id"],
            ["statistics.id"],
        ),
        sa.ForeignKeyConstraint(
            ["parent_id"],
            ["molecule_set_results.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "molecule_sets",
        sa.Column("id", sa.String(length=32), nullable=False),
        sa.ForeignKeyConstraint(
            ["id"],
            ["base_sets.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "studies",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("parent_id", sa.Integer(), nullable=False),
        sa.Column("identifier", sa.String(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("description", sa.String(), nullable=False),
        sa.ForeignKeyConstraint(
            ["parent_id"],
            ["projects.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_studies_id"), "studies", ["id"], unique=False)
    op.create_index(
        op.f("ix_studies_identifier"), "studies", ["identifier"], unique=False
    )
    op.create_table(
        "sub_study_environments",
        sa.Column("sub_study_id", sa.Integer(), nullable=False),
        sa.Column("environment_id", sa.String(), nullable=False),
        sa.ForeignKeyConstraint(
            ["environment_id"],
            ["chemical_environments.id"],
        ),
        sa.ForeignKeyConstraint(
            ["sub_study_id"],
            ["sub_studies.id"],
        ),
        sa.PrimaryKeyConstraint("sub_study_id", "environment_id"),
    )
    op.create_table(
        "sub_study_force_fields",
        sa.Column("sub_study_id", sa.Integer(), nullable=False),
        sa.Column("force_field_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["force_field_id"],
            ["force_fields.id"],
        ),
        sa.ForeignKeyConstraint(
            ["sub_study_id"],
            ["sub_studies.id"],
        ),
        sa.PrimaryKeyConstraint("sub_study_id", "force_field_id"),
    )
    op.create_table(
        "benchmarks",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("parent_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["id"],
            ["sub_studies.id"],
        ),
        sa.ForeignKeyConstraint(
            ["parent_id"],
            ["studies.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "data_set_entries",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("parent_id", sa.String(), nullable=True),
        sa.Column("property_type", sa.String(), nullable=False),
        sa.Column("temperature", sa.Float(), nullable=False),
        sa.Column("pressure", sa.Float(), nullable=True),
        sa.Column("phase", sa.String(), nullable=False),
        sa.Column("value", sa.Float(), nullable=False),
        sa.Column("std_error", sa.Float(), nullable=True),
        sa.Column("doi", sa.String(), nullable=False),
        sa.ForeignKeyConstraint(
            ["parent_id"],
            ["data_sets.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_data_set_entries_id"), "data_set_entries", ["id"], unique=True
    )
    op.create_table(
        "molecules",
        sa.Column("smiles", sa.String(), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("parent_id", sa.String(), nullable=True),
        sa.ForeignKeyConstraint(
            ["parent_id"],
            ["molecule_sets.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_molecules_id"), "molecules", ["id"], unique=False)
    op.create_table(
        "optimizations",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("parent_id", sa.Integer(), nullable=False),
        sa.Column("max_iterations", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["id"],
            ["sub_studies.id"],
        ),
        sa.ForeignKeyConstraint(
            ["parent_id"],
            ["studies.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "benchmark_results",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("parent_id", sa.Integer(), nullable=False),
        sa.Column("data_set_result_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["data_set_result_id"],
            ["data_set_results.id"],
        ),
        sa.ForeignKeyConstraint(
            ["parent_id"],
            ["benchmarks.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_benchmark_results_id"), "benchmark_results", ["id"], unique=False
    )
    op.create_table(
        "benchmark_test_sets",
        sa.Column("benchmark_id", sa.Integer(), nullable=False),
        sa.Column("data_set_id", sa.String(), nullable=False),
        sa.ForeignKeyConstraint(
            ["benchmark_id"],
            ["benchmarks.id"],
        ),
        sa.ForeignKeyConstraint(
            ["data_set_id"],
            ["data_sets.id"],
        ),
        sa.PrimaryKeyConstraint("benchmark_id", "data_set_id"),
    )
    op.create_table(
        "component",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("parent_id", sa.Integer(), nullable=False),
        sa.Column("smiles", sa.String(), nullable=False),
        sa.Column("mole_fraction", sa.Float(), nullable=True),
        sa.Column("exact_amount", sa.Integer(), nullable=True),
        sa.Column("role", sa.String(), nullable=False),
        sa.ForeignKeyConstraint(
            ["parent_id"],
            ["data_set_entries.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_component_id"), "component", ["id"], unique=False)
    op.create_table(
        "data_set_result_entries",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("parent_id", sa.Integer(), nullable=False),
        sa.Column("reference_id", sa.Integer(), nullable=False),
        sa.Column("estimated_value", sa.Float(), nullable=True),
        sa.Column("estimated_std_error", sa.Float(), nullable=True),
        sa.Column("category", sa.String(), nullable=True),
        sa.ForeignKeyConstraint(
            ["parent_id"],
            ["data_set_results.id"],
        ),
        sa.ForeignKeyConstraint(
            ["reference_id"],
            ["data_set_entries.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_data_set_result_entries_id"),
        "data_set_result_entries",
        ["id"],
        unique=False,
    )
    op.create_table(
        "force_balance",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("parent_id", sa.Integer(), nullable=False),
        sa.Column("convergence_step_criteria", sa.Float(), nullable=False),
        sa.Column("convergence_objective_criteria", sa.Float(), nullable=False),
        sa.Column("convergence_gradient_criteria", sa.Float(), nullable=False),
        sa.Column("n_criteria", sa.Integer(), nullable=False),
        sa.Column("initial_trust_radius", sa.Float(), nullable=False),
        sa.Column("minimum_trust_radius", sa.Float(), nullable=False),
        sa.ForeignKeyConstraint(
            ["parent_id"],
            ["optimizations.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_force_balance_id"), "force_balance", ["id"], unique=False)
    op.create_table(
        "optimization_parameters",
        sa.Column("optimization_id", sa.Integer(), nullable=False),
        sa.Column("parameter_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["optimization_id"],
            ["optimizations.id"],
        ),
        sa.ForeignKeyConstraint(
            ["parameter_id"],
            ["parameters.id"],
        ),
        sa.PrimaryKeyConstraint("optimization_id", "parameter_id"),
    )
    op.create_table(
        "optimization_results",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("parent_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["parent_id"],
            ["optimizations.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_optimization_results_id"), "optimization_results", ["id"], unique=False
    )
    op.create_table(
        "optimization_targets",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("type", sa.String(length=10), nullable=True),
        sa.Column("parent_id", sa.Integer(), nullable=False),
        sa.Column("identifier", sa.String(length=32), nullable=False),
        sa.Column("weight", sa.Float(), nullable=False),
        sa.ForeignKeyConstraint(
            ["parent_id"],
            ["optimizations.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_optimization_targets_id"), "optimization_targets", ["id"], unique=False
    )
    op.create_table(
        "evaluator_targets",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("allow_direct_simulation", sa.Boolean(), nullable=False),
        sa.Column("n_molecules", sa.Integer(), nullable=True),
        sa.Column("allow_reweighting", sa.Boolean(), nullable=False),
        sa.Column("n_effective_samples", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["id"],
            ["optimization_targets.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "force_balance_priors",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("parent_id", sa.Integer(), nullable=True),
        sa.Column("parameter_type", sa.String(), nullable=False),
        sa.Column("value", sa.Float(), nullable=False),
        sa.ForeignKeyConstraint(
            ["parent_id"],
            ["force_balance.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_force_balance_priors_id"), "force_balance_priors", ["id"], unique=False
    )
    op.create_table(
        "recharge_targets",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("esp_settings_id", sa.Integer(), nullable=False),
        sa.Column("conformer_settings_id", sa.Integer(), nullable=False),
        sa.Column("property", sa.String(length=14), nullable=True),
        sa.ForeignKeyConstraint(
            ["conformer_settings_id"],
            ["recharge_conformer_settings.id"],
        ),
        sa.ForeignKeyConstraint(
            ["esp_settings_id"],
            ["recharge_esp_settings.id"],
        ),
        sa.ForeignKeyConstraint(
            ["id"],
            ["optimization_targets.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "results_force_fields",
        sa.Column("results_id", sa.Integer(), nullable=False),
        sa.Column("force_field_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["force_field_id"],
            ["force_fields.id"],
        ),
        sa.ForeignKeyConstraint(
            ["results_id"],
            ["optimization_results.id"],
        ),
        sa.PrimaryKeyConstraint("results_id", "force_field_id"),
    )
    op.create_table(
        "target_results",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("type", sa.String(length=10), nullable=True),
        sa.Column("parent_id", sa.Integer(), nullable=False),
        sa.Column("target_id", sa.Integer(), nullable=False),
        sa.Column("iteration", sa.Integer(), nullable=False),
        sa.Column("objective_function", sa.Float(), nullable=False),
        sa.ForeignKeyConstraint(
            ["parent_id"],
            ["optimization_results.id"],
        ),
        sa.ForeignKeyConstraint(
            ["target_id"],
            ["optimization_targets.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_target_results_id"), "target_results", ["id"], unique=False
    )
    op.create_table(
        "evaluator_denominators",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("parent_id", sa.Integer(), nullable=True),
        sa.Column("property_type", sa.String(), nullable=False),
        sa.Column("value", sa.String(), nullable=False),
        sa.ForeignKeyConstraint(
            ["parent_id"],
            ["evaluator_targets.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_evaluator_denominators_id"),
        "evaluator_denominators",
        ["id"],
        unique=False,
    )
    op.create_table(
        "evaluator_target_results",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("data_set_result_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["data_set_result_id"],
            ["data_set_results.id"],
        ),
        sa.ForeignKeyConstraint(
            ["id"],
            ["target_results.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "evaluator_training_sets",
        sa.Column("evaluator_targets", sa.Integer(), nullable=False),
        sa.Column("data_set_id", sa.String(), nullable=False),
        sa.ForeignKeyConstraint(
            ["data_set_id"],
            ["data_sets.id"],
        ),
        sa.ForeignKeyConstraint(
            ["evaluator_targets"],
            ["evaluator_targets.id"],
        ),
        sa.PrimaryKeyConstraint("evaluator_targets", "data_set_id"),
    )
    op.create_table(
        "recharge_grid_settings",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("parent_id", sa.Integer(), nullable=False),
        sa.Column("type", sa.String(length=32), nullable=False),
        sa.Column("spacing", sa.Float(), nullable=False),
        sa.Column("inner_vdw_scale", sa.Float(), nullable=False),
        sa.Column("outer_vdw_scale", sa.Float(), nullable=False),
        sa.ForeignKeyConstraint(
            ["parent_id"],
            ["recharge_targets.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_recharge_grid_settings_id"),
        "recharge_grid_settings",
        ["id"],
        unique=False,
    )
    op.create_table(
        "recharge_pcm_settings",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("parent_id", sa.Integer(), nullable=False),
        sa.Column("solver", sa.String(length=6), nullable=False),
        sa.Column("solvent", sa.String(length=20), nullable=False),
        sa.Column("radii_model", sa.String(length=8), nullable=False),
        sa.Column("radii_scaling", sa.Boolean(), nullable=False),
        sa.Column("cavity_area", sa.Float(), nullable=True),
        sa.ForeignKeyConstraint(
            ["parent_id"],
            ["recharge_targets.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_recharge_pcm_settings_id"),
        "recharge_pcm_settings",
        ["id"],
        unique=False,
    )
    op.create_table(
        "recharge_target_results",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("molecule_set_result_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["id"],
            ["target_results.id"],
        ),
        sa.ForeignKeyConstraint(
            ["molecule_set_result_id"],
            ["molecule_set_results.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "recharge_training_sets",
        sa.Column("recharge_targets", sa.Integer(), nullable=False),
        sa.Column("molecule_set_id", sa.String(), nullable=False),
        sa.ForeignKeyConstraint(
            ["molecule_set_id"],
            ["molecule_sets.id"],
        ),
        sa.ForeignKeyConstraint(
            ["recharge_targets"],
            ["recharge_targets.id"],
        ),
        sa.PrimaryKeyConstraint("recharge_targets", "molecule_set_id"),
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("recharge_training_sets")
    op.drop_table("recharge_target_results")
    op.drop_index(
        op.f("ix_recharge_pcm_settings_id"), table_name="recharge_pcm_settings"
    )
    op.drop_table("recharge_pcm_settings")
    op.drop_index(
        op.f("ix_recharge_grid_settings_id"), table_name="recharge_grid_settings"
    )
    op.drop_table("recharge_grid_settings")
    op.drop_table("evaluator_training_sets")
    op.drop_table("evaluator_target_results")
    op.drop_index(
        op.f("ix_evaluator_denominators_id"), table_name="evaluator_denominators"
    )
    op.drop_table("evaluator_denominators")
    op.drop_index(op.f("ix_target_results_id"), table_name="target_results")
    op.drop_table("target_results")
    op.drop_table("results_force_fields")
    op.drop_table("recharge_targets")
    op.drop_index(op.f("ix_force_balance_priors_id"), table_name="force_balance_priors")
    op.drop_table("force_balance_priors")
    op.drop_table("evaluator_targets")
    op.drop_index(op.f("ix_optimization_targets_id"), table_name="optimization_targets")
    op.drop_table("optimization_targets")
    op.drop_index(op.f("ix_optimization_results_id"), table_name="optimization_results")
    op.drop_table("optimization_results")
    op.drop_table("optimization_parameters")
    op.drop_index(op.f("ix_force_balance_id"), table_name="force_balance")
    op.drop_table("force_balance")
    op.drop_index(
        op.f("ix_data_set_result_entries_id"), table_name="data_set_result_entries"
    )
    op.drop_table("data_set_result_entries")
    op.drop_index(op.f("ix_component_id"), table_name="component")
    op.drop_table("component")
    op.drop_table("benchmark_test_sets")
    op.drop_index(op.f("ix_benchmark_results_id"), table_name="benchmark_results")
    op.drop_table("benchmark_results")
    op.drop_table("optimizations")
    op.drop_index(op.f("ix_molecules_id"), table_name="molecules")
    op.drop_table("molecules")
    op.drop_index(op.f("ix_data_set_entries_id"), table_name="data_set_entries")
    op.drop_table("data_set_entries")
    op.drop_table("benchmarks")
    op.drop_table("sub_study_force_fields")
    op.drop_table("sub_study_environments")
    op.drop_index(op.f("ix_studies_identifier"), table_name="studies")
    op.drop_index(op.f("ix_studies_id"), table_name="studies")
    op.drop_table("studies")
    op.drop_table("molecule_sets")
    op.drop_table("molecule_set_statistics")
    op.drop_table("data_sets")
    op.drop_table("data_set_statistics")
    op.drop_table("author_projects")
    op.drop_table("author_base_sets")
    op.drop_index(op.f("ix_sub_studies_identifier"), table_name="sub_studies")
    op.drop_index(op.f("ix_sub_studies_id"), table_name="sub_studies")
    op.drop_table("sub_studies")
    op.drop_index(op.f("ix_statistics_id"), table_name="statistics")
    op.drop_table("statistics")
    op.drop_index(
        op.f("ix_recharge_esp_settings_id"), table_name="recharge_esp_settings"
    )
    op.drop_table("recharge_esp_settings")
    op.drop_index(
        op.f("ix_recharge_conformer_settings_id"),
        table_name="recharge_conformer_settings",
    )
    op.drop_table("recharge_conformer_settings")
    op.drop_index(op.f("ix_projects_identifier"), table_name="projects")
    op.drop_index(op.f("ix_projects_id"), table_name="projects")
    op.drop_table("projects")
    op.drop_index(op.f("ix_parameters_id"), table_name="parameters")
    op.drop_table("parameters")
    op.drop_index(op.f("ix_molecule_set_results_id"), table_name="molecule_set_results")
    op.drop_table("molecule_set_results")
    op.drop_index(op.f("ix_force_fields_id"), table_name="force_fields")
    op.drop_table("force_fields")
    op.drop_index(op.f("ix_data_set_results_id"), table_name="data_set_results")
    op.drop_table("data_set_results")
    op.drop_index(
        op.f("ix_chemical_environments_id"), table_name="chemical_environments"
    )
    op.drop_table("chemical_environments")
    op.drop_index(op.f("ix_base_sets_id"), table_name="base_sets")
    op.drop_table("base_sets")
    op.drop_index(op.f("ix_authors_id"), table_name="authors")
    op.drop_table("authors")
    # ### end Alembic commands ###
