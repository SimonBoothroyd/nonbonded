"""Initial generation.

Revision ID: d4a84f539879
Revises:
Create Date: 2020-06-08 12:00:47.937419

"""
import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision = "d4a84f539879"
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "authors",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(), nullable=True),
        sa.Column("email", sa.String(), nullable=True),
        sa.Column("institute", sa.String(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("email"),
    )
    op.create_index(op.f("ix_authors_id"), "authors", ["id"], unique=False)
    op.create_table(
        "chemical_environments",
        sa.Column("id", sa.String(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_chemical_environments_id"),
        "chemical_environments",
        ["id"],
        unique=True,
    )
    op.create_table(
        "data_sets",
        sa.Column("id", sa.String(), nullable=False),
        sa.Column("description", sa.String(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_data_sets_id"), "data_sets", ["id"], unique=False)
    op.create_table(
        "force_fields",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("inner_xml", sa.String(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_force_fields_id"), "force_fields", ["id"], unique=False)
    op.create_table(
        "parameters",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("handler_type", sa.String(), nullable=True),
        sa.Column("smirks", sa.String(), nullable=True),
        sa.Column("attribute_name", sa.String(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_parameters_id"), "parameters", ["id"], unique=False)
    op.create_table(
        "projects",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("identifier", sa.String(), nullable=True),
        sa.Column("name", sa.String(), nullable=True),
        sa.Column("description", sa.String(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("name"),
    )
    op.create_index(op.f("ix_projects_id"), "projects", ["id"], unique=False)
    op.create_index(
        op.f("ix_projects_identifier"), "projects", ["identifier"], unique=True
    )
    op.create_table(
        "author_data_sets",
        sa.Column("dataset_id", sa.String(), nullable=True),
        sa.Column("author_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(["author_id"], ["authors.id"],),
        sa.ForeignKeyConstraint(["dataset_id"], ["data_sets.id"],),
    )
    op.create_table(
        "author_projects",
        sa.Column("project_id", sa.Integer(), nullable=False),
        sa.Column("author_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(["author_id"], ["authors.id"],),
        sa.ForeignKeyConstraint(["project_id"], ["projects.id"],),
        sa.PrimaryKeyConstraint("project_id", "author_id"),
    )
    op.create_table(
        "data_set_entries",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("parent_id", sa.String(), nullable=True),
        sa.Column("property_type", sa.String(), nullable=True),
        sa.Column("temperature", sa.Float(), nullable=True),
        sa.Column("pressure", sa.Float(), nullable=True),
        sa.Column("phase", sa.String(), nullable=True),
        sa.Column("value", sa.Float(), nullable=True),
        sa.Column("std_error", sa.Float(), nullable=True),
        sa.Column("doi", sa.String(), nullable=True),
        sa.ForeignKeyConstraint(["parent_id"], ["data_sets.id"],),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_data_set_entries_id"), "data_set_entries", ["id"], unique=True
    )
    op.create_table(
        "studies",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("parent_id", sa.Integer(), nullable=False),
        sa.Column("identifier", sa.String(), nullable=True),
        sa.Column("name", sa.String(), nullable=True),
        sa.Column("description", sa.String(), nullable=True),
        sa.ForeignKeyConstraint(["parent_id"], ["projects.id"],),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_studies_id"), "studies", ["id"], unique=False)
    op.create_index(
        op.f("ix_studies_identifier"), "studies", ["identifier"], unique=False
    )
    op.create_table(
        "component",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("parent_id", sa.Integer(), nullable=True),
        sa.Column("smiles", sa.String(), nullable=True),
        sa.Column("mole_fraction", sa.Float(), nullable=True),
        sa.Column("exact_amount", sa.Integer(), nullable=True),
        sa.Column("role", sa.String(), nullable=True),
        sa.ForeignKeyConstraint(["parent_id"], ["data_set_entries.id"],),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_component_id"), "component", ["id"], unique=False)
    op.create_table(
        "optimizations",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("parent_id", sa.Integer(), nullable=False),
        sa.Column("identifier", sa.String(), nullable=True),
        sa.Column("name", sa.String(), nullable=True),
        sa.Column("description", sa.String(), nullable=True),
        sa.ForeignKeyConstraint(["parent_id"], ["studies.id"],),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_optimizations_id"), "optimizations", ["id"], unique=False)
    op.create_index(
        op.f("ix_optimizations_identifier"),
        "optimizations",
        ["identifier"],
        unique=False,
    )
    op.create_table(
        "benchmarks",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("parent_id", sa.Integer(), nullable=False),
        sa.Column("identifier", sa.String(), nullable=True),
        sa.Column("name", sa.String(), nullable=True),
        sa.Column("description", sa.String(), nullable=True),
        sa.Column("optimization_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(["optimization_id"], ["optimizations.id"],),
        sa.ForeignKeyConstraint(["parent_id"], ["studies.id"],),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_benchmarks_id"), "benchmarks", ["id"], unique=False)
    op.create_index(
        op.f("ix_benchmarks_identifier"), "benchmarks", ["identifier"], unique=False
    )
    op.create_table(
        "denominators",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("parent_id", sa.Integer(), nullable=True),
        sa.Column("property_type", sa.String(), nullable=True),
        sa.Column("value", sa.String(), nullable=True),
        sa.ForeignKeyConstraint(["parent_id"], ["optimizations.id"],),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_denominators_id"), "denominators", ["id"], unique=False)
    op.create_table(
        "forcebalance",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("parent_id", sa.Integer(), nullable=True),
        sa.Column("max_iterations", sa.Integer(), nullable=True),
        sa.Column("convergence_step_criteria", sa.Float(), nullable=True),
        sa.Column("convergence_objective_criteria", sa.Float(), nullable=True),
        sa.Column("convergence_gradient_criteria", sa.Float(), nullable=True),
        sa.Column("n_criteria", sa.Integer(), nullable=True),
        sa.Column("target_name", sa.String(), nullable=True),
        sa.ForeignKeyConstraint(["parent_id"], ["optimizations.id"],),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_forcebalance_id"), "forcebalance", ["id"], unique=False)
    op.create_table(
        "optimization_environments",
        sa.Column("optimization_id", sa.Integer(), nullable=False),
        sa.Column("environment_id", sa.String(), nullable=False),
        sa.ForeignKeyConstraint(
            ["environment_id"], ["chemical_environments.id"], ondelete="CASCADE"
        ),
        sa.ForeignKeyConstraint(
            ["optimization_id"], ["optimizations.id"], ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("optimization_id", "environment_id"),
    )
    op.create_table(
        "optimization_force_fields",
        sa.Column("optimization_id", sa.Integer(), nullable=False),
        sa.Column("force_field_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(["force_field_id"], ["force_fields.id"],),
        sa.ForeignKeyConstraint(["optimization_id"], ["optimizations.id"],),
        sa.PrimaryKeyConstraint("optimization_id", "force_field_id"),
    )
    op.create_table(
        "optimization_parameters",
        sa.Column("optimization_id", sa.Integer(), nullable=False),
        sa.Column("parameter_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["optimization_id"], ["optimizations.id"], ondelete="CASCADE"
        ),
        sa.ForeignKeyConstraint(
            ["parameter_id"], ["parameters.id"], ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("optimization_id", "parameter_id"),
    )
    op.create_table(
        "optimization_results",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("parent_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(["parent_id"], ["optimizations.id"],),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_optimization_results_id"), "optimization_results", ["id"], unique=False
    )
    op.create_table(
        "optimization_training_sets",
        sa.Column("optimization_id", sa.Integer(), nullable=False),
        sa.Column("data_set_id", sa.String(), nullable=False),
        sa.ForeignKeyConstraint(["data_set_id"], ["data_sets.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(
            ["optimization_id"], ["optimizations.id"], ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("optimization_id", "data_set_id"),
    )
    op.create_table(
        "priors",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("parent_id", sa.Integer(), nullable=True),
        sa.Column("parameter_type", sa.String(), nullable=True),
        sa.Column("value", sa.Float(), nullable=True),
        sa.ForeignKeyConstraint(["parent_id"], ["optimizations.id"],),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_priors_id"), "priors", ["id"], unique=False)
    op.create_table(
        "benchmark_environments",
        sa.Column("benchmark_id", sa.Integer(), nullable=False),
        sa.Column("environment_id", sa.String(), nullable=False),
        sa.ForeignKeyConstraint(
            ["benchmark_id"], ["benchmarks.id"], ondelete="CASCADE"
        ),
        sa.ForeignKeyConstraint(
            ["environment_id"], ["chemical_environments.id"], ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("benchmark_id", "environment_id"),
    )
    op.create_table(
        "benchmark_force_fields",
        sa.Column("benchmark_id", sa.Integer(), nullable=False),
        sa.Column("force_field_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(["benchmark_id"], ["benchmarks.id"],),
        sa.ForeignKeyConstraint(["force_field_id"], ["force_fields.id"],),
        sa.PrimaryKeyConstraint("benchmark_id", "force_field_id"),
    )
    op.create_table(
        "benchmark_results",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("parent_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(["parent_id"], ["benchmarks.id"],),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_benchmark_results_id"), "benchmark_results", ["id"], unique=False
    )
    op.create_table(
        "benchmark_test_sets",
        sa.Column("benchmark_id", sa.Integer(), nullable=False),
        sa.Column("data_set_id", sa.String(), nullable=False),
        sa.ForeignKeyConstraint(
            ["benchmark_id"], ["benchmarks.id"], ondelete="CASCADE"
        ),
        sa.ForeignKeyConstraint(["data_set_id"], ["data_sets.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("benchmark_id", "data_set_id"),
    )
    op.create_table(
        "objective_function",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("parent_id", sa.Integer(), nullable=True),
        sa.Column("iteration", sa.Integer(), nullable=True),
        sa.Column("value", sa.Float(), nullable=True),
        sa.ForeignKeyConstraint(["parent_id"], ["optimization_results.id"],),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_objective_function_id"), "objective_function", ["id"], unique=False
    )
    op.create_table(
        "optimization_statistics_entries",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("statistics_type", sa.String(), nullable=True),
        sa.Column("property_type", sa.String(), nullable=True),
        sa.Column("n_components", sa.Integer(), nullable=True),
        sa.Column("category", sa.String(), nullable=True),
        sa.Column("value", sa.Float(), nullable=True),
        sa.Column("lower_95_ci", sa.Float(), nullable=True),
        sa.Column("upper_95_ci", sa.Float(), nullable=True),
        sa.Column("parent_id", sa.Integer(), nullable=False),
        sa.Column("iteration", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(["parent_id"], ["optimization_results.id"],),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_optimization_statistics_entries_id"),
        "optimization_statistics_entries",
        ["id"],
        unique=False,
    )
    op.create_table(
        "results_force_fields",
        sa.Column("results_id", sa.Integer(), nullable=False),
        sa.Column("force_field_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(["force_field_id"], ["force_fields.id"],),
        sa.ForeignKeyConstraint(["results_id"], ["optimization_results.id"],),
        sa.PrimaryKeyConstraint("results_id", "force_field_id"),
    )
    op.create_table(
        "benchmark_results_entries",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("parent_id", sa.Integer(), nullable=False),
        sa.Column("reference_id", sa.Integer(), nullable=False),
        sa.Column("estimated_value", sa.Float(), nullable=True),
        sa.Column("estimated_std_error", sa.Float(), nullable=True),
        sa.Column("category", sa.String(), nullable=True),
        sa.ForeignKeyConstraint(["parent_id"], ["benchmark_results.id"],),
        sa.ForeignKeyConstraint(["reference_id"], ["data_set_entries.id"],),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_benchmark_results_entries_id"),
        "benchmark_results_entries",
        ["id"],
        unique=False,
    )
    op.create_table(
        "benchmark_statistics_entries",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("statistics_type", sa.String(), nullable=True),
        sa.Column("property_type", sa.String(), nullable=True),
        sa.Column("n_components", sa.Integer(), nullable=True),
        sa.Column("category", sa.String(), nullable=True),
        sa.Column("value", sa.Float(), nullable=True),
        sa.Column("lower_95_ci", sa.Float(), nullable=True),
        sa.Column("upper_95_ci", sa.Float(), nullable=True),
        sa.Column("parent_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(["parent_id"], ["benchmark_results.id"],),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_benchmark_statistics_entries_id"),
        "benchmark_statistics_entries",
        ["id"],
        unique=False,
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(
        op.f("ix_benchmark_statistics_entries_id"),
        table_name="benchmark_statistics_entries",
    )
    op.drop_table("benchmark_statistics_entries")
    op.drop_index(
        op.f("ix_benchmark_results_entries_id"), table_name="benchmark_results_entries"
    )
    op.drop_table("benchmark_results_entries")
    op.drop_table("results_force_fields")
    op.drop_index(
        op.f("ix_optimization_statistics_entries_id"),
        table_name="optimization_statistics_entries",
    )
    op.drop_table("optimization_statistics_entries")
    op.drop_index(op.f("ix_objective_function_id"), table_name="objective_function")
    op.drop_table("objective_function")
    op.drop_table("benchmark_test_sets")
    op.drop_index(op.f("ix_benchmark_results_id"), table_name="benchmark_results")
    op.drop_table("benchmark_results")
    op.drop_table("benchmark_force_fields")
    op.drop_table("benchmark_environments")
    op.drop_index(op.f("ix_priors_id"), table_name="priors")
    op.drop_table("priors")
    op.drop_table("optimization_training_sets")
    op.drop_index(op.f("ix_optimization_results_id"), table_name="optimization_results")
    op.drop_table("optimization_results")
    op.drop_table("optimization_parameters")
    op.drop_table("optimization_force_fields")
    op.drop_table("optimization_environments")
    op.drop_index(op.f("ix_forcebalance_id"), table_name="forcebalance")
    op.drop_table("forcebalance")
    op.drop_index(op.f("ix_denominators_id"), table_name="denominators")
    op.drop_table("denominators")
    op.drop_index(op.f("ix_benchmarks_identifier"), table_name="benchmarks")
    op.drop_index(op.f("ix_benchmarks_id"), table_name="benchmarks")
    op.drop_table("benchmarks")
    op.drop_index(op.f("ix_optimizations_identifier"), table_name="optimizations")
    op.drop_index(op.f("ix_optimizations_id"), table_name="optimizations")
    op.drop_table("optimizations")
    op.drop_index(op.f("ix_component_id"), table_name="component")
    op.drop_table("component")
    op.drop_index(op.f("ix_studies_identifier"), table_name="studies")
    op.drop_index(op.f("ix_studies_id"), table_name="studies")
    op.drop_table("studies")
    op.drop_index(op.f("ix_data_set_entries_id"), table_name="data_set_entries")
    op.drop_table("data_set_entries")
    op.drop_table("author_projects")
    op.drop_table("author_data_sets")
    op.drop_index(op.f("ix_projects_identifier"), table_name="projects")
    op.drop_index(op.f("ix_projects_id"), table_name="projects")
    op.drop_table("projects")
    op.drop_index(op.f("ix_parameters_id"), table_name="parameters")
    op.drop_table("parameters")
    op.drop_index(op.f("ix_force_fields_id"), table_name="force_fields")
    op.drop_table("force_fields")
    op.drop_index(op.f("ix_data_sets_id"), table_name="data_sets")
    op.drop_table("data_sets")
    op.drop_index(
        op.f("ix_chemical_environments_id"), table_name="chemical_environments"
    )
    op.drop_table("chemical_environments")
    op.drop_index(op.f("ix_authors_id"), table_name="authors")
    op.drop_table("authors")
    # ### end Alembic commands ###
