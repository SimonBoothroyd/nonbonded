"""Drop esp, conf, pcm settings

Revision ID: be8ccc05f719
Revises: 927605b99c0e
Create Date: 2020-12-04 12:32:19.075654

"""
import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = "be8ccc05f719"
down_revision = "927605b99c0e"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###

    # Upgrading will result in data loss - proceed with caution!
    op.drop_index("ix_recharge_esp_settings_id", table_name="recharge_esp_settings")
    op.drop_constraint(
        "recharge_targets_esp_settings_id_fkey", "recharge_targets", type_="foreignkey"
    )
    op.drop_constraint(
        "recharge_targets_conformer_settings_id_fkey",
        "recharge_targets",
        type_="foreignkey",
    )
    op.drop_table("recharge_esp_settings")
    op.drop_index("ix_recharge_pcm_settings_id", table_name="recharge_pcm_settings")
    op.drop_table("recharge_pcm_settings")
    op.drop_index(
        "ix_recharge_conformer_settings_id", table_name="recharge_conformer_settings"
    )
    op.drop_table("recharge_conformer_settings")
    op.drop_column("recharge_targets", "conformer_settings_id")
    op.drop_column("recharge_targets", "esp_settings_id")
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###

    # Downgrading will result in data loss - proceed with caution!
    op.add_column(
        "recharge_targets",
        sa.Column("esp_settings_id", sa.INTEGER(), autoincrement=False, nullable=False),
    )
    op.add_column(
        "recharge_targets",
        sa.Column(
            "conformer_settings_id", sa.INTEGER(), autoincrement=False, nullable=False
        ),
    )
    op.create_foreign_key(
        "recharge_targets_conformer_settings_id_fkey",
        "recharge_targets",
        "recharge_conformer_settings",
        ["conformer_settings_id"],
        ["id"],
    )
    op.create_foreign_key(
        "recharge_targets_esp_settings_id_fkey",
        "recharge_targets",
        "recharge_esp_settings",
        ["esp_settings_id"],
        ["id"],
    )
    op.create_table(
        "recharge_conformer_settings",
        sa.Column(
            "id",
            sa.INTEGER(),
            server_default=sa.text(
                "nextval('recharge_conformer_settings_id_seq'::regclass)"
            ),
            autoincrement=True,
            nullable=False,
        ),
        sa.Column("method", sa.VARCHAR(length=16), autoincrement=False, nullable=False),
        sa.Column(
            "sampling_mode", sa.VARCHAR(length=8), autoincrement=False, nullable=False
        ),
        sa.Column("max_conformers", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.PrimaryKeyConstraint("id", name="recharge_conformer_settings_pkey"),
        sa.UniqueConstraint(
            "method",
            "sampling_mode",
            "max_conformers",
            name="recharge_conformer_settings_method_sampling_mode_max_confor_key",
        ),
        postgresql_ignore_search_path=False,
    )
    op.create_index(
        "ix_recharge_conformer_settings_id",
        "recharge_conformer_settings",
        ["id"],
        unique=False,
    )
    op.create_table(
        "recharge_pcm_settings",
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("parent_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("solver", sa.VARCHAR(length=6), autoincrement=False, nullable=False),
        sa.Column(
            "solvent", sa.VARCHAR(length=20), autoincrement=False, nullable=False
        ),
        sa.Column(
            "radii_model", sa.VARCHAR(length=8), autoincrement=False, nullable=False
        ),
        sa.Column("radii_scaling", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.Column(
            "cavity_area",
            postgresql.DOUBLE_PRECISION(precision=53),
            autoincrement=False,
            nullable=True,
        ),
        sa.ForeignKeyConstraint(
            ["parent_id"],
            ["recharge_targets.id"],
            name="recharge_pcm_settings_parent_id_fkey",
        ),
        sa.PrimaryKeyConstraint("id", name="recharge_pcm_settings_pkey"),
    )
    op.create_index(
        "ix_recharge_pcm_settings_id", "recharge_pcm_settings", ["id"], unique=False
    )
    op.create_table(
        "recharge_esp_settings",
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("basis", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("method", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column(
            "psi4_dft_grid_settings", sa.VARCHAR(), autoincrement=False, nullable=False
        ),
        sa.PrimaryKeyConstraint("id", name="recharge_esp_settings_pkey"),
        sa.UniqueConstraint(
            "basis",
            "method",
            "psi4_dft_grid_settings",
            name="recharge_esp_settings_basis_method_psi4_dft_grid_settings_key",
        ),
    )
    op.create_index(
        "ix_recharge_esp_settings_id", "recharge_esp_settings", ["id"], unique=False
    )
    # ### end Alembic commands ###
